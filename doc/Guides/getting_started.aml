<?xml version="1.0" encoding="utf-8"?>
<topic id="1fa61ad2-5eb3-43b3-b032-c2a26aa46d34" revisionNumber="1">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
	  <autoOutline>0</autoOutline>
      <para>This guide will give a gentle introduction to how to start creating music with MIDI Gremlin. </para>
	  <alert class="tip">
		<para>This guide goes somewhat in dept, not only explaining how, but also the what and why. If you just want to get started creating music, you can read <link xlink:href="8c0c97d0-c968-4c15-9fe9-e8f3a443c50a" /> for a crash course.</para>
	  </alert>
    </introduction>
    <section address="Creating an Orchestra and an Instrument">
      <title>Creating an Orchestra and an Instrument</title>
      <content>
        <para>The first step to playing music is creating an <codeEntityReference qualifyHint="true" linkText="Orchestra">T:MidiGremlin.Orchestra</codeEntityReference > and an <codeEntityReference qualifyHint="true" linkText="Instrument">T:MidiGremlin.Instrument</codeEntityReference >.</para>
		<para>All <codeEntityReference qualifyHint="true" linkText="Orchestra">
		T:MidiGremlin.Orchestra</codeEntityReference > requires an <codeEntityReference qualifyHint="true" linkText="IMidiOut">T:MidiGremlin.IMidiOut</codeEntityReference > interface. This interface is in most cases a 
		<codeEntityReference qualifyHint="true" linkText="WinmmOut">T:MidiGremlin.WinmmOut
		</codeEntityReference > that plays MIDI commands over <externalLink>
			<linkUri>https://msdn.microsoft.com/en-us/library/dd743883(v=vs.85).aspx</linkUri>
			<linkText>Windows Multi Media</linkText>
		</externalLink> dll, but it is possible to substitute it with something else</para>
		<code language="Csharp" source="..\src\GettingStarted\Program.cs" region="Orchestra"/>
		<para>Once you have created an __Instrument__ we can test it by playing a single sound. If you are using __WinmmOut__ and not another implementation of __IMidiOut__ that sound should come out of your speakers. If it dosen't, check your audio setup.</para>
		<code language="Csharp" source="..\src\GettingStarted\Program.cs" region="SingleSound"/>
		<para>Normally you won't be giving sending __Tone__'s directly to an __Instrumet__ but it is the quickest way to get started.</para>
      </content>
    </section>
	
	<section address="Creating your first MusicObject">
      <title>Creating your first MusicObject</title>
      <content>
        <para>Now that we have a connection to your speakers, we can start creating some simple __MusicObject__'s. __MusicObject__ are composite objects building a tree structure of music.</para>
		<para>The first __MusicObject__ we are going to use is the __Note__ class. A __Note__ is one of the fundemental __MusicObject__ representing a single keypress.</para>
		<alert class="tip">
			<para>That was a lie. A __Note__ contains a __Keystroke__ and a __Pause__. For more details, see __Note__ documentation. For our pourposes it is true though.</para>
		</alert>
		<code language="Csharp" source="..\src\GettingStarted\Program.cs" region="MusicObjects"/>
		<para>Once we have some pieces of music, we are going to collect them in larger pieces. This can be build as large as you wish.</para>
		<alert class="caution">
			<para>Make sure not to add a MusicObject somewhere in its parts. MidiGremlin <bold>does not</bold> detect this and is going to cause a _@StackoverflowException@_ if you try to play or transform it.</para>
		</alert>
		<code language="Csharp" source="..\src\GettingStarted\Program.cs" region="LargeMusicObject"/>
		
      </content>
    </section>
	
	<section address="Creating larger pieces">
      <title>Creating larger pieces</title>
      <content>
        <para>TODO: this</para>
      </content>
    </section>
	
	<section address="Using transformations to create variations">
      <title>Using transformations to create variations</title>
      <content>
        <para>TODO: this</para>
      </content>
    </section>
	
	
    <!-- Optional next steps info
    <nextSteps>
      <content><para>Next steps info goes here</para></content>
    </nextSteps>
    -->
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>