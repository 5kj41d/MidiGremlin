<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Getting started</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="1fa61ad2-5eb3-43b3-b032-c2a26aa46d34" /><meta name="Description" content="This guide will give a gentle introduction to how to start creating music with MIDI Gremlin." /><meta name="Microsoft.Help.ContentType" content="How To" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Midi Gremlin Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="1fa61ad2-5eb3-43b3-b032-c2a26aa46d34.htm" title="Midi Gremlin Documentation" tocid="roottoc">Midi Gremlin Documentation</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="1fa61ad2-5eb3-43b3-b032-c2a26aa46d34.htm" title="Getting started with MIDI Gremlin" tocid="1fa61ad2-5eb3-43b3-b032-c2a26aa46d34">Getting started with MIDI Gremlin</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="7494f5ca-8811-4bde-577d-449d562fe3c1.htm" title="Midi Gremlin Namespaces" tocid="7494f5ca-8811-4bde-577d-449d562fe3c1">Midi Gremlin Namespaces</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="fda06c87-3c98-4ebd-81ba-ca03ff28d18c.htm" title="Example: Creating music with Conway's Game of Life" tocid="fda06c87-3c98-4ebd-81ba-ca03ff28d18c">Example: Creating music with Conway's Game of Life</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img width="250" height="150" src="../icons/Gremlin.png" /></td><td class="titleColumn">Getting started</td></tr></table><span class="introStyle"></span><div class="introduction"><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Creating an Orchestra and an Instrument">Creating an Orchestra and an Instrument</a></li><li class="outlineSectionEntry"><a href="#Creating your first MusicObject">Creating your first MusicObject</a></li><li class="outlineSectionEntry"><a href="#Using transformations to create variations">Using transformations to create variations</a></li><li class="outlineSectionEntry"><a href="#Using another Instrument">Using another Instrument</a></li><li class="outlineSectionEntry">All code used in this article</li><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul><p>This guide will give a gentle introduction to how to start creating music with MIDI Gremlin. </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Tip" /> Tip</th></tr><tr><td><p>This guide goes somewhat in dept, not only explaining how, but also the what and why. If you just want to get started creating music, you can read <span class="nolink">[8c0c97d0-c968-4c15-9fe9-e8f3a443c50a]</span> for a crash course.</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="Creating an Orchestra and an Instrument"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Creating an Orchestra and an Instrument</span></div><div id="ID1RBSection" class="collapsibleSection"><p>The first step to playing music is creating an <a href="b497ebdb-e441-6dd9-3f10-b496b735f28e.htm">Orchestra</a> and an <a href="bf179790-4d7c-76dc-ef1d-79c769198c0d.htm">Instrument</a>.</p><p>All <a href="b497ebdb-e441-6dd9-3f10-b496b735f28e.htm">Orchestra</a>s require an <a href="1e0de45c-5363-b39a-e739-e8cf22353cba.htm">IMidiOut</a> interface. This interface is in most cases a 
		<a href="9ccfeb1c-4251-e2c8-5167-90c66b82fe76.htm">WinmmOut</a> that plays MIDI commands over <a href="https://msdn.microsoft.com/en-us/library/dd743883(v=vs.85).aspx" target="_blank">Windows Multi Media</a> dll, but it is possible to substitute it with something else.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EADAGAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADAGAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EADAGAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADAGAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> midiDeviceId = <span class="highlight-number">0</span>; <span class="highlight-comment">//Most computers will only have this one.</span>
<span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> beatsPerSecond = <span class="highlight-number">60</span>; <span class="highlight-comment">//Tempo of the music. 60 beats per second 1 one beat equals 1 second.</span>
IMidiOut output = <span class="highlight-keyword">new</span> WinmmOut(midiDeviceId, beatsPerSecond);
Orchestra orchestra = <span class="highlight-keyword">new</span> Orchestra(output);

Instrument piano = orchestra.AddInstrument(InstrumentType.BrightAcousticPiano);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADAGAAA");</script><p>Once you have created an <a href="bf179790-4d7c-76dc-ef1d-79c769198c0d.htm">Instrument</a> we can test it by playing a single sound. If you are using <a href="9ccfeb1c-4251-e2c8-5167-90c66b82fe76.htm">WinmmOut</a> and not another implementation of <a href="1e0de45c-5363-b39a-e739-e8cf22353cba.htm">IMidiOut</a> that sound should come out of your speakers. If it dosen't, check your audio setup.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABAGAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABAGAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EABAGAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABAGAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">//Play a single sound</span>
piano.Play(Tone.C, <span class="highlight-number">1</span>);
orchestra.WaitForFinished();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABAGAAA");</script><p>Normally you won't be sending <a href="3c13fd0e-0e5e-3bff-d6b9-d3348730f86d.htm">Tone</a>s directly to an <a href="bf179790-4d7c-76dc-ef1d-79c769198c0d.htm">Instrument</a> but it is the quickest way to get started.</p></div><div class="collapsibleAreaRegion" id="Creating your first MusicObject"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Creating your first MusicObject</span></div><div id="ID2RBSection" class="collapsibleSection"><p>Now that we have a connection to your speakers, we can start creating some simple <a href="3cb38fa1-c1f0-1579-b0be-620ccc550ab6.htm">MusicObject</a>s. <a href="3cb38fa1-c1f0-1579-b0be-620ccc550ab6.htm">MusicObject</a>s are composite objects building a tree structure of music.</p><p>The first <a href="3cb38fa1-c1f0-1579-b0be-620ccc550ab6.htm">MusicObject</a> we are going to use is the <a href="af71b68b-fb78-ae0a-3cd6-6527e067d6a9.htm">Note</a> class. A <a href="af71b68b-fb78-ae0a-3cd6-6527e067d6a9.htm">Note</a> is one of the fundemental <a href="3cb38fa1-c1f0-1579-b0be-620ccc550ab6.htm">MusicObject</a> representing a single keypress.</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Tip" /> Tip</th></tr><tr><td><p>This is not quite true. A <a href="af71b68b-fb78-ae0a-3cd6-6527e067d6a9.htm">Note</a> contains a <a href="40ab4ca0-0831-7e45-12f6-a2f8cc7cec76.htm">Keystroke</a> and a <a href="14c94af4-9922-cd13-c113-4f359b88d48f.htm">Pause</a>. For more details, see <a href="af71b68b-fb78-ae0a-3cd6-6527e067d6a9.htm">Note</a> documentation. For our pourposes, however, this is a quite reasonable abstraction.</p></td></tr></table></div><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EADAFAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADAFAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EADAFAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADAFAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">MusicObject longF = <span class="highlight-keyword">new</span> Note(Tone.F, <span class="highlight-number">1</span>);
MusicObject shortF = <span class="highlight-keyword">new</span> Note(Tone.F, <span class="highlight-number">0.5</span>);
MusicObject longA = <span class="highlight-keyword">new</span> Note(Tone.A, <span class="highlight-number">1</span>);
MusicObject shortA = <span class="highlight-keyword">new</span> Note(Tone.A, <span class="highlight-number">0.5</span>);
MusicObject longG = <span class="highlight-keyword">new</span> Note(Tone.G, <span class="highlight-number">1</span>);
MusicObject shortG = <span class="highlight-keyword">new</span> Note(Tone.G, <span class="highlight-number">0.5</span>);


Console.WriteLine(<span class="highlight-literal">"Press enter to play a single sound"</span>);
Console.ReadLine();
<span class="highlight-comment">//We can play any of those on an instrument if we wish</span>
piano.Play(shortG);
orchestra.WaitForFinished();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADAFAAA");</script><p>Once we have some pieces of music, we are going to use them to create larger pieces. These can be made as large as you wish.</p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Caution note" /> Caution</th></tr><tr><td><p>Make sure not add a <a href="3cb38fa1-c1f0-1579-b0be-620ccc550ab6.htm">MusicObject</a> to any of its own children. MidiGremlin does not detect this and parsing is going to cause a <a href="http://msdn2.microsoft.com/en-us/library/xcewth9z" target="_blank">StackoverflowException</a> if you try to play or transform it.</p></td></tr></table></div><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAFAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAFAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAAFAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAFAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">//Create 2 smaller MusicObjects made out of the base pieces</span>
MusicObject sequence1 = <span class="highlight-keyword">new</span> SequentialMusicList(longF, shortA, longG, shortA);
MusicObject sequence2 = <span class="highlight-keyword">new</span> SequentialMusicList(shortA, shortA, shortA, longA, shortF);

<span class="highlight-comment">//Now create a bigger MusicObject made of those 2 smaller ones and one new</span>
SequentialMusicList bigMusicObject = <span class="highlight-keyword">new</span> SequentialMusicList(sequence1, sequence1, sequence2, <span class="highlight-keyword">new</span> Note(Tone.D, <span class="highlight-number">2</span>));

<span class="highlight-comment">//We can play this too</span>
<span class="highlight-comment">//We can play any of those on an instrument if we wish</span>
Console.WriteLine(<span class="highlight-literal">"Press enter to play a longer sequence of sound"</span>);
Console.ReadLine();
piano.Play(bigMusicObject);
orchestra.WaitForFinished();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAFAAA");</script></div><div class="collapsibleAreaRegion" id="Using transformations to create variations"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Using transformations to create variations</span></div><div id="ID3RBSection" class="collapsibleSection"><p>Finally we are going to look at transformations. Transformations allow you to copy a <a href="3cb38fa1-c1f0-1579-b0be-620ccc550ab6.htm">MusicObject</a> while applying a function to all children of a specified type.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">//Make the 1st object a little lower on the scale, using a transform</span>
<span class="highlight-keyword">int</span>[] offsets = { <span class="highlight-number">0</span>, <span class="highlight-number">-3</span>, <span class="highlight-number">-3</span>, <span class="highlight-number">-2</span> };
bigMusicObject[<span class="highlight-number">1</span>] = bigMusicObject[<span class="highlight-number">1</span>].Select&lt;Note&gt;((x,y) =&gt; x.OffsetBy(Scale.MajorScale, offsets[y]));

<span class="highlight-comment">//Play our final piece.</span>
Console.WriteLine(<span class="highlight-literal">"Press enter to play \"Drømte mig en drøm i nat\", "</span>);
Console.ReadLine();
piano.Play(bigMusicObject);
orchestra.WaitForFinished();

<span class="highlight-comment">//You have just heard https://en.wikipedia.org/wiki/Dr%C3%B8mde_mik_en_dr%C3%B8m_i_nat</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAEAAA");</script></div><div class="collapsibleAreaRegion" id="Using another Instrument"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Using another Instrument</span></div><div id="ID4RBSection" class="collapsibleSection"><p>If a piano is not your cup of tea, playing on an other instrument is as simple as creating it and telling it what to play.</p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Caution note" /> Caution</th></tr><tr><td><p>Due to the limitations of the MIDI standard, playing more than 15 normal instruments and 1 drum at the same time is going to result in an error.</p></td></tr></table></div><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">//Create a flute</span>
Instrument flute = orchestra.AddInstrument(InstrumentType.Flute);




Console.WriteLine(<span class="highlight-literal">"Press enter to play \"Drømte mig en drøm i nat\" on a flute"</span>);
Console.ReadLine();
flute.Play(bigMusicObject);
orchestra.WaitForFinished();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAAA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />All code used in this article</span></div><div id="ID5RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> MidiGremlin;

<span class="highlight-keyword">namespace</span> GettingStarted
{
    <span class="highlight-keyword">class</span> Program
    {
        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main(<span class="highlight-keyword">string</span>[] args)
        {


            <span class="highlight-preprocessor">#region</span> Orchestra
            <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> midiDeviceId = <span class="highlight-number">0</span>; <span class="highlight-comment">//Most computers will only have this one.</span>
            <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> beatsPerSecond = <span class="highlight-number">60</span>; <span class="highlight-comment">//Tempo of the music. 60 beats per second 1 one beat equals 1 second.</span>
            IMidiOut output = <span class="highlight-keyword">new</span> WinmmOut(midiDeviceId, beatsPerSecond);
            Orchestra orchestra = <span class="highlight-keyword">new</span> Orchestra(output);

            Instrument piano = orchestra.AddInstrument(InstrumentType.BrightAcousticPiano);
            <span class="highlight-preprocessor">#endregion</span>

            <span class="highlight-preprocessor">#region</span> SingleSound

            <span class="highlight-comment">//Play a single sound</span>
            piano.Play(Tone.C, <span class="highlight-number">1</span>);
            orchestra.WaitForFinished();

            <span class="highlight-preprocessor">#endregion</span>

            <span class="highlight-preprocessor">#region</span> MusicObjects
            MusicObject longF = <span class="highlight-keyword">new</span> Note(Tone.F, <span class="highlight-number">1</span>);
            MusicObject shortF = <span class="highlight-keyword">new</span> Note(Tone.F, <span class="highlight-number">0.5</span>);
            MusicObject longA = <span class="highlight-keyword">new</span> Note(Tone.A, <span class="highlight-number">1</span>);
            MusicObject shortA = <span class="highlight-keyword">new</span> Note(Tone.A, <span class="highlight-number">0.5</span>);
            MusicObject longG = <span class="highlight-keyword">new</span> Note(Tone.G, <span class="highlight-number">1</span>);
            MusicObject shortG = <span class="highlight-keyword">new</span> Note(Tone.G, <span class="highlight-number">0.5</span>);


            Console.WriteLine(<span class="highlight-literal">"Press enter to play a single sound"</span>);
            Console.ReadLine();
            <span class="highlight-comment">//We can play any of those on an instrument if we wish</span>
            piano.Play(shortG);
            orchestra.WaitForFinished();

            <span class="highlight-preprocessor">#endregion</span>

            <span class="highlight-preprocessor">#region</span> LargeMusicObject

            <span class="highlight-comment">//Create 2 smaller MusicObjects made out of the base pieces</span>
            MusicObject sequence1 = <span class="highlight-keyword">new</span> SequentialMusicList(longF, shortA, longG, shortA);
            MusicObject sequence2 = <span class="highlight-keyword">new</span> SequentialMusicList(shortA, shortA, shortA, longA, shortF);

            <span class="highlight-comment">//Now create a bigger MusicObject made of those 2 smaller ones and one new</span>
            SequentialMusicList bigMusicObject = <span class="highlight-keyword">new</span> SequentialMusicList(sequence1, sequence1, sequence2, <span class="highlight-keyword">new</span> Note(Tone.D, <span class="highlight-number">2</span>));

            <span class="highlight-comment">//We can play this too</span>
            <span class="highlight-comment">//We can play any of those on an instrument if we wish</span>
            Console.WriteLine(<span class="highlight-literal">"Press enter to play a longer sequence of sound"</span>);
            Console.ReadLine();
            piano.Play(bigMusicObject);
            orchestra.WaitForFinished();

            <span class="highlight-preprocessor">#endregion</span>

            <span class="highlight-preprocessor">#region</span> Transformation
            <span class="highlight-comment">//Make the 1st object a little lower on the scale, using a transform</span>
            <span class="highlight-keyword">int</span>[] offsets = { <span class="highlight-number">0</span>, <span class="highlight-number">-3</span>, <span class="highlight-number">-3</span>, <span class="highlight-number">-2</span> };
            bigMusicObject[<span class="highlight-number">1</span>] = bigMusicObject[<span class="highlight-number">1</span>].Select&lt;Note&gt;((x,y) =&gt; x.OffsetBy(Scale.MajorScale, offsets[y]));

            <span class="highlight-comment">//Play our final piece.</span>
            Console.WriteLine(<span class="highlight-literal">"Press enter to play \"Drømte mig en drøm i nat\", "</span>);
            Console.ReadLine();
            piano.Play(bigMusicObject);
            orchestra.WaitForFinished();

            <span class="highlight-comment">//You have just heard https://en.wikipedia.org/wiki/Dr%C3%B8mde_mik_en_dr%C3%B8m_i_nat</span>
            <span class="highlight-preprocessor">#endregion</span>

            <span class="highlight-preprocessor">#region</span> OtherInstrument
            <span class="highlight-comment">//Create a flute</span>
            Instrument flute = orchestra.AddInstrument(InstrumentType.Flute);




            Console.WriteLine(<span class="highlight-literal">"Press enter to play \"Drømte mig en drøm i nat\" on a flute"</span>);
            Console.ReadLine();
            flute.Play(bigMusicObject);
            orchestra.WaitForFinished();
            <span class="highlight-preprocessor">#endregion</span>

            <span class="highlight-preprocessor">#region</span> TransformToChords
            <span class="highlight-comment">//Using Select&lt;&gt;() it's also possible to change the type of a MusicObject.</span>
            ChordVariety minor = ChordVariety.Minor;
            MusicObject asChords = bigMusicObject.Select&lt;Note&gt;(n =&gt; minor.WithBaseTone(n.Keystroke.Tone, n.Pause.Duration));

            Console.WriteLine(<span class="highlight-literal">"Press enter to play \"Drømte mig en drøm i nat\" as minor."</span>);
            Console.ReadLine();

            piano.Play(asChords);

            orchestra.WaitForFinished();
            <span class="highlight-preprocessor">#endregion</span>



        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACAAA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="b497ebdb-e441-6dd9-3f10-b496b735f28e.htm">MidiGremlin<span id="LSTAB2E156B_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAB2E156B_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Orchestra</a></div><div class="seeAlsoStyle"><a href="bf179790-4d7c-76dc-ef1d-79c769198c0d.htm">MidiGremlin<span id="LSTAB2E156B_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAB2E156B_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Instrument</a></div><div class="seeAlsoStyle"><a href="af71b68b-fb78-ae0a-3cd6-6527e067d6a9.htm">MidiGremlin<span id="LSTAB2E156B_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAB2E156B_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Note</a></div><div class="seeAlsoStyle"><a href="9eaa4c10-be65-60d8-d039-aebd6d74e1a1.htm">MidiGremlin<span id="LSTAB2E156B_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAB2E156B_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SequentialMusicList</a></div><div class="seeAlsoStyle"><span class="nolink">MusicObject.Select``1(Func<span id="LSTAB2E156B_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAB2E156B_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UMP, UMP<span id="LSTAB2E156B_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAB2E156B_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</span></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://github.com/joha4270/MidiGremlin" target="_blank">[v1.0.0.0] Copyright © 2006-2016, Johannes Elgaard, Asger Horn Brorholt, Christian Gundersen Holmgaard, Emil Jensen, Ibrahim Kohistani, Kennet Nørgaard Larsen, Nicklas Højgaard Sneftrup, All rights reserved</a></p></div></body></html>